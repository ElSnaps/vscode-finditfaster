{
  "name": "find-it-faster",
  "displayName": "FindItFaster",
  "publisher": "TomRijndorp",
  "icon": "media/icon.png",
  "repository": {
    "url": "https://github.com/tomrijndorp/vscode-finditfaster"
  },
  "description": "Find it, but faster! Leveraging fzf and rg.",
  "keywords": [
    "ag",
    "bat",
    "batcat",
    "find it faster",
    "files",
    "find",
    "finder",
    "fuzzy",
    "fzf",
    "grep",
    "open",
    "rg",
    "ripgrep",
    "search",
    "within"
  ],
  "version": "0.0.7",
  "engines": {
    "vscode": "^1.56.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:find-it-faster.findFiles",
    "onCommand:find-it-faster.findWithinFiles"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "find-it-faster.findFiles",
        "title": "Find It Faster: search file"
      },
      {
        "command": "find-it-faster.findWithinFiles",
        "title": "Find It Faster: search within files"
      }
    ],
    "keybindings": [
      {
        "command": "find-it-faster.findFiles",
        "mac": "cmd+shift+j",
        "linux": "ctrl+shift+j"
      },
      {
        "command": "find-it-faster.findWithinFiles",
        "mac": "cmd+shift+u",
        "linux": "ctrl+shift+u"
      }
    ],
    "configuration": {
      "title": "FindItFaster",
      "properties": {
        "find-it-faster.general.hideTerminalAfterSuccess": {
          "markdownDescription": "Extensions have limited control over the terminal panel. Ideally, it would be possible to automatically switch back to the previous thing you were doing (e.g. hide the terminal, show the terminal you're working on, show the tasks panel if that's what you were on), but we can't. Select here whether you want the terminal to be hidden or remain shown after invoking a command that fails / is canceled.",
          "type": "boolean",
          "default": true
        },
        "find-it-faster.general.hideTerminalAfterFail": {
          "markdownDescription": "Extensions have limited control over the terminal panel. Ideally, it would be possible to automatically switch back to the previous thing you were doing (e.g. hide the terminal, show the terminal you're working on, show the tasks panel if that's what you were on), but we can't. Select here whether you want the terminal to be hidden or remain shown after invoking a command that succeeds.",
          "type": "boolean",
          "default": true
        },
        "find-it-faster.general.clearTerminalAfterUse": {
          "markdownDescription": "Sends a 'clear' command after invoking a terminal command for a cleaner look",
          "type": "boolean",
          "default": true
        },
        "find-it-faster.general.showMaximizedTerminal": {
          "markdownDescription": "Show the terminal in full screen. Works especially nicely if you set the \"hide after succes / fail\" options in these preferences.",
          "type": "boolean",
          "default": false
        },
        "find-it-faster.general.useWorkspaceSearchExcludes": {
          "markdownDescription": "In order to speed up VS Code's native search functionality, you can use the `search.exclude` setting. If checked, this extension will honor the same exclude patterns (as long as they follow the standard \"gitignore glob style\" that `rg` uses.",
          "type": "boolean",
          "default": true
        },
        "find-it-faster.general.defaultSearchLocation": {
          "markdownDescription": "Search in this folder if you don't have any folders added to your workspace",
          "type": "string",
          "default": "~"
        },
        "find-it-faster.findFiles.showPreview": {
          "markdownDescription": "Show a preview window when searching files",
          "type": "boolean",
          "default": true
        },
        "find-it-faster.findFiles.previewCommand": {
          "markdownDescription": "When populated: Used by `fzf` to produce the preview. Use `{}` to indicate the filename. Example: `bat {}`.",
          "type": "string",
          "default": ""
        },
        "find-it-faster.findFiles.previewWindowConfig": {
          "markdownDescription": "When populated: Used by `fzf` to determine position and look of the preview window. See the `fzf` documentation. Example for a horizontal split: `top,50%`.",
          "type": "string",
          "default": ""
        },
        "find-it-faster.findWithinFiles.showPreview": {
          "markdownDescription": "Show a preview window when searching within files",
          "type": "boolean",
          "default": true
        },
        "find-it-faster.findWithinFiles.previewCommand": {
          "markdownDescription": "When populated: Used by `fzf` to produce the preview when searching within files. Use `{1}` to indicate the filename, `{2}` for the line number. Example using `cat` and `awk` instead of `bat`: `cat {1} | awk '{if (NR>={2}) print}'`.",
          "type": "string",
          "default": ""
        },
        "find-it-faster.findWithinFiles.previewWindowConfig": {
          "markdownDescription": "When populated: Used by `fzf` to determine position and look of the preview window. See the `fzf` documentation. Example for a horizontal split: `top,50%,border-bottom,+{2}+3/3,~3`.",
          "type": "string",
          "default": ""
        },
        "find-it-faster.advanced.disableStartupChecks": {
          "markdownDescription": "By default, we check that you have `fzf`, `rg`, and `bat` on your path. If you'd like to disable these checks because you're getting creative (e.g. use `cat` instead of `bat`), check this box. Obviously you may see errors on your terminal if we do call one of these programs when they are not present!",
          "type": "boolean",
          "default": false
        },
        "find-it-faster.advanced.useEditorSelectionAsQuery": {
          "markdownDescription": "By default, if you have an active editor with a text selection, we'll use that to populate the prompt in `fzf` such that it will start filtering text directly. Uncheck to disable.",
          "type": "boolean",
          "default": true
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc --noEmitOnError --strict -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "vscode:package": "vsce package --githubBranch main"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.2.2",
    "@types/node": "14.x",
    "@types/vscode": "^1.56.0",
    "@typescript-eslint/eslint-plugin": "^4.26.0",
    "@typescript-eslint/parser": "^4.26.0",
    "eslint": "^7.27.0",
    "glob": "^7.1.7",
    "mocha": "^8.4.0",
    "typescript": "^4.3.2",
    "vsce": "^1.95.0",
    "vscode-test": "^1.5.2"
  }
}
